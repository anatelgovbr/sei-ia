[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "autodeployer"
version = "0.1.0"
description = "Autodeployer SEIIA"
authors = [{name = "Anatel", email = "seiia@anatel.gov.br"}]

dependencies = [
    "requests",
    "xmltodict",
    "GitPython",
    "sqlalchemy",
    "psycopg2-binary==2.9.3",
    "python-dotenv",
    "rich"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black",
    "ruff==0.4.3",
    "pytype",
    "requests-mock",
    "coverage",
    "pytest-mock",
    "taskipy"
]

[tool.setuptools.packages.find]
where = ["autodeployer"]

[tool.pytest.ini_options]
pythonpath = ["autodeployer"]

[tool.coverage.run]
branch = true
source = ["."]
omit = ["./tests/*", "./.conda/*"]

[tool.taskipy.tasks]
pre-commit = """
set -e
rm -rf .pytest .pytype .pytest_cache .coverage 
rm -rf .venv .ruff_cache build dist *ipynb_checkpoints
python -m venv .venv
source .venv/bin/activate
pip install .[dev]
ruff check --statistics .
pytype --exclude=tests/* --exclude=.conda/* --exclude=.venv/* -k .
black . --check
coverage run --source=. -m pytest ./tests/unit
coverage report --fail-under=95
coverage run --source=. -m pytest ./tests/integration
coverage report --fail-under=80
deactivate
rm -rf .pytest .pytype .pytest_cache .coverage autodeployer/shared
rm -rf .venv .ruff_cache build dist *ipynb_checkpoints
"""


[tool.pytype]
inputs = [
    "pytype/*.py",
    "pytype/overlays/",
    "pytype/pyc/",
    "pytype/pyi/",
    "pytype/pytd/",
    "pytype/tools/",
    "pytype/typegraph/",
    "pytype_extensions/**/*.py",
]
exclude = [
    "tests/*",
    ".conda",
    ".pytype*",
    "__pypackages__",
    "venv",
    "*.egg-info",
    ".pytest*"
]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
force-exclude = '''
/(
\.git
| \.mypy_cache
| \.venv
| _build
| build
| dist
| tests
)/
'''


[tool.ruff]
# Ruff - An extremely fast Python linter, written in Rust. - https://beta.ruff.rs
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*ipynb_checkpoints"
]
# Same as Black.
#line-length = 88
# Same as PyCharm.
line-length = 120
# Assume Python 3.8.
target-version = "py38"
[tool.ruff.lint]
# Enable all rules https://beta.ruff.rs/docs/rules/
select = ['A', 'ANN', 'ARG', 'B', 'BLE', 'C', 'C4', 'C90', 'COM', 'D', 'DJ', 'DTZ', 'E', 'EM', 'ERA', 'EXE', 'F', 'FBT', 'G', 'I', 'ICN', 'INP', 'ISC', 'N', 'NPY', 'PD', 'PGH', 'PIE', 'PL', 'PLC', 'PLE', 'PLR', 'PLW', 'PT', 'PTH', 'PYI', 'Q', 'RET', 'RSE', 'RUF', 'S', 'SIM', 'SLF', 'T10', 'T20', 'TCH', 'TID', 'TRY', 'UP', 'W', 'YTT']
#select = ['D']
# Rules to ignore:
# COM flake8-commas is no longer maintained, and now black or https://github.com/asottile/add-trailing-comma is recommended instead
# PLR0913 Too many arguments to function call (6 > 5)
# G003 Logging statement uses `+`
# G004 Logging statement uses f-string
# S324 Probable use of insecure hash functions in `hashlib`: `sha1`
# ANN101 Missing type annotation for `self` in method
ignore = ["COM","PLR0913", "G003", "G004", "S324", "ANN101"]
# Allow autofix for all enabled rules (when `--fix`) is provided.
#fixable = ["A", "B", "C", "D", "E", "F", "I"]
fixable = ['A', 'ANN', 'ARG', 'B', 'BLE', 'C', 'C4', 'C90', 'COM', 'D', 'DJ', 'DTZ', 'E', 'EM', 'ERA', 'EXE', 'F', 'FBT', 'G', 'I', 'ICN', 'INP', 'ISC', 'N', 'NPY', 'PD', 'PGH', 'PIE', 'PL', 'PLC', 'PLE', 'PLR', 'PLW', 'PT', 'PTH', 'PYI', 'Q', 'RET', 'RSE', 'RUF', 'S', 'SIM', 'SLF', 'T10', 'T20', 'TCH', 'TID', 'TRY', 'UP', 'W', 'YTT']
# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
[tool.ruff.lint.pydocstyle]
# Google DocString Convention
convention = "google"

